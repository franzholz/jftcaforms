<?php/*************************************************************** *  Copyright notice * *  (c) 2009 Juergen Furrer <juergen.furrer@gmail.com> *  All rights reserved * *  This script is part of the TYPO3 project. The TYPO3 project is *  free software; you can redistribute it and/or modify *  it under the terms of the GNU General Public License as published by *  the Free Software Foundation; either version 2 of the License, or *  (at your option) any later version. * *  The GNU General Public License can be found at *  http://www.gnu.org/copyleft/gpl.html. * *  This script is distributed in the hope that it will be useful, *  but WITHOUT ANY WARRANTY; without even the implied warranty of *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the *  GNU General Public License for more details. * *  This copyright notice MUST APPEAR in all copies of the script! ***************************************************************//** * 'tceFunc' for the 'jftcaforms' extension. * * @author     Juergen Furrer <juergen.furrer@gmail.com> * @package    TYPO3 * @subpackage tx_jftcaforms */class tx_jftcaforms_tceFunc{	/**	 * This will render a slider to choose one value from a defined range.	 * 	 * @param	array		$PA An array with additional configuration options.	 * @param	object		$fobj TCEForms object reference	 * @return	string		The HTML code for the TCEform field	 */	public function getExtSlider($PA, &$fObj)	{		$checkboxCode = null;		// The config from TCA-Field		$conf = $PA['fieldConf']['config'];		// get the vars from config		$width            = (is_numeric($conf['width']) ? $conf['width'] : '200');		$lower            = (is_numeric($conf['range']['lower']) ? $conf['range']['lower'] : '0');		$upper            = (is_numeric($conf['range']['upper']) ? $conf['range']['upper'] : '100');		$decimalPrecision = ($conf['decimalPrecision'] ? $conf['decimalPrecision'] : '0');		$emptyValue       = ($conf['emptyValue'] ? $conf['emptyValue'] : '0');		// 		$value = (is_numeric($PA['itemFormElValue']) ? $PA['itemFormElValue'] : $lower);		if (! is_numeric($PA['itemFormElValue']) && $emptyValue) {			$disabled = true;		} else {			$disabled = false;		}		// Define the unique vars		$id_slider = uniqid('tceforms-slider-');		$id_checkbox = uniqid('tceforms-check-');		$var = uniqid('slider_');		// Language vars		$from_ts = $GLOBALS['LANG']->sL('LLL:EXT:jftcaforms/locallang_db.xml:tt_content.pi_flexform.from_ts');		if (! $from_ts) {			$from_ts = 'From TS';		}		// get the pagerenderer		$pagerender = $GLOBALS['TBE_TEMPLATE']->getPageRenderer();		// Fix slider in hidden tabPanel		$pagerender->addExtOnReadyCode("		Ext.override(Ext.Slider, {			getRatio: function() {				var w = this.innerEl.getComputedWidth();				var v = this.maxValue - this.minValue;				return (v == 0 ? w : (w/v));			}		});", true);		// Add the slider		$pagerender->addExtOnReadyCode("		var {$var} = new Ext.Slider({			renderTo: '{$id_slider}-outer',			width: {$width},			minValue: {$lower},			maxValue: {$upper},			value: {$value},			decimalPrecision: {$decimalPrecision},			disabled: ".($disabled ? 'true' : 'false')."		});		{$var}.on('change', function(slider, newValue) {			Ext.get('{$id_slider}').set({value: newValue});			Ext.get('{$id_slider}-num').update(newValue ? newValue : '0');		});");		// The code for the checkbox will only be rendered, when emptyValue is set		if ($emptyValue) {			$pagerender->addExtOnReadyCode("			Ext.get('{$id_checkbox}').on('click', function(obj1, obj2) {				if (obj2.checked) {					Ext.get('{$id_slider}').set({value: ''});					Ext.get('{$id_slider}-num').update('".t3lib_div::slashJS($from_ts)."');					{$var}.disable();				} else {					{$var}.enable();					var newValue = {$var}.getValue();					Ext.get('{$id_slider}').set({value: newValue});					Ext.get('{$id_slider}-num').update(newValue ? newValue : '{$lower}');				}			});");			$checkboxCode = '<input type="checkbox" class="checkbox" id="'.$id_checkbox.'" name="'.$PA['itemFormElName'].'_cb" style="float:left;"'.($disabled ? ' checked="checked"' : '').'>';		}		return '' .			'<div class="t3-form-field t3-form-field-flex">' .				'<input type="hidden" name="'.$PA['itemFormElName'].'" value="'.($disabled ? '' : $value).'" id="'.$id_slider.'"/>' .				$checkboxCode .				'<div id="'.$id_slider.'-num">'.($disabled ? $from_ts : $value).'</div>' .			'</div>' .			'<div id="'.$id_slider.'-outer"></div>';	}}if (defined('TYPO3_MODE') && $TYPO3_CONF_VARS[TYPO3_MODE]['XCLASS']['ext/jftcaforms/lib/class.tx_jftcaforms_tceFunc.php']) {	include_once($TYPO3_CONF_VARS[TYPO3_MODE]['XCLASS']['ext/jftcaforms/lib/class.tx_jftcaforms_tceFunc.php']);}?>